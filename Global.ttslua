KDM_VERSION = "1.3"

GLOBAL_OBJECT = self

local Armor = require("Kdm/Armor")
local Archive = require("Kdm/Archive")
local BattleUi = require("Kdm/BattleUi")
local Campaign = require("Kdm/Campaign")
local Console = require("Kdm/Console")
local Deck = require("Kdm/Deck")
local Expansion = require("Kdm/Expansion")
local GlobalUi = require("Kdm/GlobalUi")
local Hunt = require("Kdm/Hunt")
local Location = require("Kdm/Location")
local Log = require("Kdm/Log")
local log = Log.ForModule("G")
local MessageBox = require("Kdm/MessageBox")
local MilestoneBoard = require("Kdm/MilestoneBoard")
local Monster = require("Kdm/Monster")
local NamedObject = require("Kdm/NamedObject")
local Player = require("Kdm/Player")
local Rules = require("Kdm/Rules")
local Settlement = require("Kdm/Settlement")
local SpawnStuff = require("Kdm/SpawnStuff")
local Showdown = require("Kdm/Showdown")
local Survivor = require("Kdm/Survivor")
local Terrain = require("Kdm/Terrain")
local Timeline = require("Kdm/Timeline")
local Ui = require("Kdm/Ui")
local Weapon = require("Kdm/Weapon")

---------------------------------------------------------------------------------------------------

function onSave()
    return JSON.encode({
        Campaign = Campaign.Save(),
        Expansion = Expansion.Save(),
        Monster = Monster.Save(),
        Player = Player.Save(),
        Survivor = Survivor.Save(),
        Timeline = Timeline.Save(),
        BattleUi = BattleUi.Save(),
    })
end

---------------------------------------------------------------------------------------------------

function onLoad(saveJson)
    local saveState = JSON.decode(saveJson) or {}

    -- Init() = everything before the UI is first rendered (includes UI setup)
    --
    Console.Init()
    SpawnStuff.Init()
    Expansion.Init(saveState.Expansion or {})
    --
    Log.Init()
    log:Printf("Misterslack's Kingdom Death: Monster Mod v%s", KDM_VERSION)
    --
    Armor.Init()
    NamedObject.Init()
    Terrain.Init()
    Ui.Init()
    Weapon.Init()
    --
    Archive.Init()
    Location.Init()
    --
    Deck.Init()
    Hunt.Init()
    Monster.Init(saveState.Monster or {})
    Rules.Init()
    Settlement.Init()
    --
    Survivor.Init(saveState.Survivor or {})
    --
    Player.Init(saveState.Player or {})
    --
    Showdown.Init()
    BattleUi.Init()
    --
    GlobalUi.Init()
    Timeline.Init(saveState.Timeline or {})
    --
    Campaign.Init(saveState.Campaign or {})
    --
    MilestoneBoard.Init()
    -- mad sketchy that initialization order for MessageBox doesn't match include order, but this must be *after* all 2d UIs since we want this to display *over*
    -- all other 2d UIs, and 2d UI display order is solely based on the order of the XML elements (last is on top of everything else)
    MessageBox.Init()

    Ui.Get2d():ApplyToObject()

    -- PostInit() = register event handlers and code that depends on the UI elements actually being instantiated
    Wait.frames(function()
        Log.PostInit()
        Monster.PostInit()
        Survivor.PostInit()
        Player.PostInit()
        Timeline.PostInit()
        BattleUi.PostInit()
    end, 20)
end
